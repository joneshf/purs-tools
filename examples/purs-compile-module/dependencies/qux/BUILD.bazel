load(
    "@bazel_skylib//rules:build_test.bzl",
    "build_test",
)
load(
    "@joneshf_rules_purescript//purescript:defs.bzl",
    "purescript_library",
)

build_test(
    name = "qux_library_test",
    targets = [
        ":qux_library",
    ],
)

build_test(
    name = "qux_test",
    targets = [
        ":qux",
    ],
)

# If we wanted to manage all of the flags and the usage of `purs-compile-module` by hand,
# we can use a `genrule` like below.
# This is largely to show how it's _possible_ to pass flags around.
# Usage of `purs-compile-module` should be automated by some other tooling.
genrule(
    name = "qux",
    srcs = [
        "//examples/purs-compile-module/dependencies/bar",
        "//examples/purs-compile-module/dependencies/baz",
        "//examples/purs-compile-module/dependencies/foo",
        "Qux.purs",
    ],
    outs = [
        "externs.cbor",
    ],
    cmd = " ".join(
        [
            "$(execpath //cmd/purs-compile-module)",
            "--input-externs-file $(execpath //examples/purs-compile-module/dependencies/bar)",
            "--input-externs-file $(execpath //examples/purs-compile-module/dependencies/baz)",
            "--input-externs-file $(execpath //examples/purs-compile-module/dependencies/foo)",
            "--output-signature-externs-file $@",
            "--purs-file $(execpath Qux.purs)",
        ],
    ),
    tools = [
        "//cmd/purs-compile-module",
    ],
    visibility = [
        "//examples/purs-compile-module/dependencies:__subpackages__",
    ],
)

# If we don't want to manage everything ourselves,
# we can use a rule like below.
# This is more likely how we'd actually want to interact with `bazel`.
#
# What's nice about using `purescript_library` is that we can list only the direct dependencies and have it work out what's actually necessary to compile.
# The dependencies are more like what's imported in the actual PureScript module.
# This is the real power of having language-specific rules:
# they abstract away a lot of the complexities in the underlying tooling.
# Another way to say that is:
# You talk about what you want to build,
# not how to build it.
purescript_library(
    name = "qux_library",
    src = "Qux.purs",
    module = "Qux",
    visibility = [
        "//examples/purs-compile-module/dependencies:__subpackages__",
    ],
    deps = [
        "//examples/purs-compile-module/dependencies/bar:bar_library",
        "//examples/purs-compile-module/dependencies/baz:baz_library",
    ],
)
